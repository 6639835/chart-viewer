name: Pre-release Build

on:
  push:
    tags:
      - 'v*-beta*'
      - 'v*-alpha*'
      - 'v*-rc*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: mac
            artifact_name: mac
          - os: ubuntu-latest
            platform: linux
            artifact_name: linux
          - os: windows-latest
            platform: win
            artifact_name: windows

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build
        env:
          NODE_ENV: production

      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run electron:build:mac -- --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run electron:build:win -- --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run electron:build:linux -- --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: chart-viewer-${{ matrix.artifact_name }}-prerelease
          path: |
            dist/*.dmg
            dist/*.zip
            dist/*.blockmap
            dist/*.yml
          retention-days: 14

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: chart-viewer-${{ matrix.artifact_name }}-prerelease
          path: |
            dist/*.exe
            dist/*.blockmap
            dist/*.yml
          retention-days: 14

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: chart-viewer-${{ matrix.artifact_name }}-prerelease
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.blockmap
            dist/*.yml
          retention-days: 14

  # Pre-release job is disabled because electron-builder with --publish always
  # automatically creates GitHub Pre-release and uploads all necessary files
  
  # pre-release:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: artifacts
  # 
  #     - name: Display structure of downloaded files
  #       run: ls -R artifacts
  # 
  #     - name: Create Pre-release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: |
  #           artifacts/**/*
  #         draft: false
  #         prerelease: true
  #         generate_release_notes: true
  #         name: Pre-release ${{ github.ref_name }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
